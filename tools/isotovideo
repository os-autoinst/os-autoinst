#!/bin/bash

iso=$1
if test -z "$iso" ; then
	echo "usage: $0 ISO"
	exit 1
fi
isodir=`pwd`
scriptdir=$(dirname $(dirname $0))
logfile=currentautoinst-log.txt

# make absolute path
export ISO=`$scriptdir/tools/absolutize $iso`

# Load the user's configured environment from cwd
if [ ! -e "env.sh" ]; then
	echo "You need a env.sh file in the working directory"
	echo "Copying the sample file..."
	cp -a $scriptdir/env.sh.sample env.sh
	echo "now please edit env.sh"
	exit 1
fi
. env.sh
echo testing $ISO
# cleanup
test -e qemu.pid && kill `cat qemu.pid` 2>/dev/null && rm -f qemu.pid
rm -f backend.run
rm -f qemuscreenshot/*.png

# start
date "+%s%n%Y-%m-%d %H:%M:%S" > ${logfile}
if test -n "$SUSEMIRROR"; then
	curl -s $SUSEMIRROR/repo/oss/media.1/build >> ${logfile}
else
	echo "No build id collected" >> ${logfile}
fi

perl $scriptdir/start.pl # || exit 1

name=$(perl -e '$_=shift;s{.*/}{};s/\.iso$//;s/-Media1?//;print' $ISO)
mkdir -p video
echo "Recording to video/$name" >> ${logfile}

# symlink the PNGs
C=0
mkdir movie
rm -f movie/*.png
for i in qemuscreenshot/*.png; do
    ln -sf $(readlink -f $i) movie/file-`printf %010d $C`.png
    C=$((C+1))
done

# Create the movie
png2theora movie/file-%010d.png -o video/$name.ogv
rm -rf movie

test -e qemu.pid && kill `cat qemu.pid` 2>/dev/null && rm -f qemu.pid
rm -f backend.run
echo "QEMU finished, running final checks" >> ${logfile}
cat serial0 >> ${logfile}
$scriptdir/tools/checklog ${logfile} | tee -a ${logfile}
# return success if video was created:
test -e video/$name.ogv

